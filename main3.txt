#include <iostream>
#include "SFML\Graphics.hpp"
#include "SFML\Window.hpp"
#include "SFML\System.hpp"

#define  SCREEN_HEIGHT 800
#define  SCREEN_WIDTH 800
#define  MOVE_DIST 10

using namespace sf;


void Handle_Movement(CircleShape &square, RenderWindow &window);

int main()
{

    RenderWindow window(VideoMode(SCREEN_WIDTH, SCREEN_HEIGHT), "Help Me");
    window.setFramerateLimit(60);
    window.setMouseCursorVisible(false);

    CircleShape square;
    square.setRadius(10.f);
    square.setPosition(Vector2f(window.getSize().x/2.f, window.getSize().y/2.f));

    while (window.isOpen())
    {
        float x = 0.1f, y = 0.1f;
        Event event;
        while (window.pollEvent(event))
        {
            if (event.type == Event::Closed)
                window.close();

            if (event.type == Event::KeyPressed && event.key.code == Keyboard::Escape)
                window.close();
        }
        //Update Section

        Handle_Movement(square, window);
        if (Mouse::isButtonPressed(Mouse::Left)) {
            window.clear();     //Clears previous frame
        }
             

        //Draw
        window.draw(square);
        window.display();
    }




    return 0;
}

void Handle_Movement(CircleShape &square, RenderWindow &window)
{
    if (Keyboard::isKeyPressed(Keyboard::W) && square.getPosition().y > 0)
    {
        square.move(Vector2f(0, -MOVE_DIST));
        square.setFillColor(Color::Color(3, 252, 90, 255));
    }
        

    if (Keyboard::isKeyPressed(Keyboard::A) && square.getPosition().x > 0)
    {
        square.move(Vector2f(-MOVE_DIST, 0));
        square.setFillColor(Color::Color(252, 86, 3, 255));
    }
        

    if (Keyboard::isKeyPressed(Keyboard::S) && square.getPosition().y + square.getRadius() < window.getSize().y)
    {
        square.move(Vector2f(0, MOVE_DIST));
        square.setFillColor(Color::Color(5, 233, 237, 255));
    }
        

    if (Keyboard::isKeyPressed(Keyboard::D) && square.getPosition().x + square.getRadius() < window.getSize().x)
    {
        square.move(Vector2f(MOVE_DIST, 0));
        square.setFillColor(Color::Color(237, 5, 194, 255));
    }
        

}